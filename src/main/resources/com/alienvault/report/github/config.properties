gitHubIssueReportUsage=********************* Usage *********************\nThis utility creates a JSON report of issues for specified repositories.\nThis utility requires an auth token for github, and \nthen a list of user/repo pairs as arguments for the executing jar file.\nFor example:\njava -jar gitIssueReport-jar-with-dependencies.jar AUTHTOKEN:someAuthToken someUser1/someRepo1 someUser2/someRepo2\n\n\There is also a working sample set of arguments (i.e. some sample repositories with bugs) \nthat can be used for demo purposes:\njava -jar gitIssueReport-jar-with-dependencies.jar AUTHTOKEN:{some github api auth token} webbervida/threephase-pineapple webbervida/twisted-pear webbervida/icanhazissues\n\n\Optionally, the number of worker threads can be specified using THREADS:someNumber. \nSuch as:\njava -jar gitIssueReport-jar-with-dependencies.jar AUTHTOKEN:{some auth token} THREADS:5 webbervida/twisted-pear webbervida/icanhazissues\n\n\If the user wishes to set a specific timeout for the report to be generated, one can be set\nby specifying an optional MAXRUNTIME setting in seconds between 1 and 600. \nFor example:\njava -jar gitIssueReport-jar-with-dependencies.jar AUTHTOKEN:{some github auth token} MAXRUNTIME:5 webbervida/twisted-pear webbervida/icanhazissues\n\nThe complete list of optional arguments is:\nENDPOINT:choose a different URL to fetch data from\nTHREADS:choose number of worker threads\nMAXRUNTIME:choose custom timeout for creating report\nREPORT:choose something other than github issue report if other implementation is available\nDESTINATION:choose something other than standard out if implementation is available\n**********************************************\n\n
atLeastOneRepoError=At least 1 user/repo combination must be specified
authTokenRequiredError=AUTHTOKEN must be specified
maxSecondsErrorPrefix=Allowable seconds to run must be an integer number between 1 and 
maxThreadsErrorPrefix=Number of threads must be between 1 and 
smallUserRepoError=User repo argument does not seem to be long enough
workerThreadDiedError=At least one worker failed to complete it's work
badEndPointErrorPrefix=Malformed endPoint URL:
badAuthErrorPrefix=Auth token must conform to:
endPoint=https://api.github.com/graphql
defaultRuntimeSeconds=60
defaultWorkerThreads=10
maxRuntime=600
authTokenCheck=^[a-zA-Z0-9]*$
reportSpacing=5
maxThreads=100
dataSourceError=IssuesDataSource unable to complete consuming datasource
gitHubQueryTemplate={\"query\": \"query{repository(owner:\\\"USER_TOKEN\\\",name:\\\"PROJECT_TOKEN\\\"){issues(first: 50  AFTER_CLAUSE){edges{node{number, state, title, createdAt}}    pageInfo {hasNextPage, endCursor}    }} } \"}